<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="145" errors="0" failures="20" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2020-08-09" time="15:42:59">
  <environment clr-version="4.0.30319.42000" user-domain="HOME" cwd="C:\TEMP" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition3" machine-name="DELL-LATITUDE" nunit-version="2.5.8.0" os-version="10.0.19041" user="marcin" />
  <culture-info current-culture="en-GB" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="9.2776" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1" executed="True" result="Failure" success="False" time="9.2776" asserts="0" description="C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1">
        <results>
          <test-suite type="TestFixture" name="Failed Checks" executed="True" result="Failure" success="False" time="8.9641" asserts="0" description="Failed Checks">
            <results>
              <test-suite type="TestFixture" name="Checking for checks that have failed to execute with the CHECK_ERROR outcome" executed="True" result="Failure" success="False" time="2.1079" asserts="0" description="Checking for checks that have failed to execute with the CHECK_ERROR outcome">
                <results>
                  <test-suite type="ParameterizedTest" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [&lt;check_name&gt;] executions should never return status of CHECK ERROR" executed="True" result="Failure" success="False" time="1.8212" asserts="0" description="Check [&lt;check_name&gt;] executions should never return status of CHECK ERROR">
                    <results>
                      <test-case description="Check [dbachecks failed] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [dbachecks failed] executions should never return status of CHECK ERROR" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [SQLWATCH Errors] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [SQLWATCH Errors] executions should never return status of CHECK ERROR" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Central Repository Import Age] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Central Repository Import Age] executions should never return status of CHECK ERROR" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Central Repository Import Errors] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Central Repository Import Errors] executions should never return status of CHECK ERROR" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Snapshot age] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Snapshot age] executions should never return status of CHECK ERROR" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Log Growths] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Log Growths] executions should never return status of CHECK ERROR" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Errors/sec] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Errors/sec] executions should never return status of CHECK ERROR" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Logins/sec] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Logins/sec] executions should never return status of CHECK ERROR" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page life expectancy] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Page life expectancy] executions should never return status of CHECK ERROR" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Buffer cache hit ratio] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Buffer cache hit ratio] executions should never return status of CHECK ERROR" time="0.0611" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Memory Grants Pending] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Memory Grants Pending] executions should never return status of CHECK ERROR" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Memory Grants Outstanding] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Memory Grants Outstanding] executions should never return status of CHECK ERROR" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Number of Deadlocks/sec] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Number of Deadlocks/sec] executions should never return status of CHECK ERROR" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Readahead pages/sec] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Readahead pages/sec] executions should never return status of CHECK ERROR" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Lock Waits/sec] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Lock Waits/sec] executions should never return status of CHECK ERROR" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Lock Timeouts/sec] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Lock Timeouts/sec] executions should never return status of CHECK ERROR" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Lock Requests/sec] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Lock Requests/sec] executions should never return status of CHECK ERROR" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Average Wait Time (ms)] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Average Wait Time (ms)] executions should never return status of CHECK ERROR" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page writes/sec] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Page writes/sec] executions should never return status of CHECK ERROR" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page Lookups Rate] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Page Lookups Rate] executions should never return status of CHECK ERROR" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page reads/sec] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Page reads/sec] executions should never return status of CHECK ERROR" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Lazy writes/sec] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Lazy writes/sec] executions should never return status of CHECK ERROR" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Free list stalls/sec] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Free list stalls/sec] executions should never return status of CHECK ERROR" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page Split Rate] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Page Split Rate] executions should never return status of CHECK ERROR" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [SQL Re-Compilations Rate] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [SQL Re-Compilations Rate] executions should never return status of CHECK ERROR" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [SQL Compilations Rate] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [SQL Compilations Rate] executions should never return status of CHECK ERROR" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Full Scan Rate] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Full Scan Rate] executions should never return status of CHECK ERROR" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Long Running Open Transactions] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Long Running Open Transactions] executions should never return status of CHECK ERROR" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases with no LOG backup] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Databases with no LOG backup] executions should never return status of CHECK ERROR" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases with no DATA backup] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Databases with no DATA backup] executions should never return status of CHECK ERROR" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Oldest DATA backup (days)] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Oldest DATA backup (days)] executions should never return status of CHECK ERROR" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Oldest LOG backup (minutes)] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Oldest LOG backup (minutes)] executions should never return status of CHECK ERROR" time="0.04" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 0, because The check results should be "OK", "WARNING" or "CRITICAL". However, checks that fail to execute or return value that is out of bound, will return "CHECK ERROR" status., but got 43.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 48
48:                 $result.Column1 | Should -Be 0 -Because 'The check results should be "OK", "WARNING" or "CRITICAL". However, checks that fail to execute or return value that is out of bound, will return "CHECK ERROR" status.'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Database page_verify not CHECKSUM] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Database page_verify not CHECKSUM] executions should never return status of CHECK ERROR" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases not MULTI_USER] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Databases not MULTI_USER] executions should never return status of CHECK ERROR" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases not ONLINE] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Databases not ONLINE] executions should never return status of CHECK ERROR" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases with Auto Shrink Enabled] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Databases with Auto Shrink Enabled] executions should never return status of CHECK ERROR" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases with Auto Close Enabled] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Databases with Auto Close Enabled] executions should never return status of CHECK ERROR" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Queued actions not processed] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Queued actions not processed] executions should never return status of CHECK ERROR" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Failed Checks] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Failed Checks] executions should never return status of CHECK ERROR" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Check execution time] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Check execution time] executions should never return status of CHECK ERROR" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Days left until disk full] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Days left until disk full] executions should never return status of CHECK ERROR" time="0.035" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Disk Free %] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Disk Free %] executions should never return status of CHECK ERROR" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Action queue failed items] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Action queue failed items] executions should never return status of CHECK ERROR" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Action queue pending items] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Action queue pending items] executions should never return status of CHECK ERROR" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [SQL Server Uptime] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [SQL Server Uptime] executions should never return status of CHECK ERROR" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [CPU Utilistaion] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [CPU Utilistaion] executions should never return status of CHECK ERROR" time="0.0543" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Blocked Process] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Blocked Process] executions should never return status of CHECK ERROR" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Failed Agent Job] executions should never return status of CHECK ERROR" name="Failed Checks.Checking for checks that have failed to execute with the CHECK_ERROR outcome.Check [Failed Agent Job] executions should never return status of CHECK ERROR" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Checking if checks have outcome" executed="True" result="Success" success="True" time="2.1443" asserts="0" description="Checking if checks have outcome">
                <results>
                  <test-suite type="ParameterizedTest" name="Failed Checks.Checking if checks have outcome.Check [&lt;check_name&gt;] should have an outcome" executed="True" result="Success" success="True" time="1.8201" asserts="0" description="Check [&lt;check_name&gt;] should have an outcome">
                    <results>
                      <test-case description="Check [dbachecks failed] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [dbachecks failed] should have an outcome" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [SQLWATCH Errors] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [SQLWATCH Errors] should have an outcome" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Central Repository Import Age] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Central Repository Import Age] should have an outcome" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Central Repository Import Errors] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Central Repository Import Errors] should have an outcome" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Snapshot age] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Snapshot age] should have an outcome" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Log Growths] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Log Growths] should have an outcome" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Errors/sec] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Errors/sec] should have an outcome" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Logins/sec] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Logins/sec] should have an outcome" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page life expectancy] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Page life expectancy] should have an outcome" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Buffer cache hit ratio] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Buffer cache hit ratio] should have an outcome" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Memory Grants Pending] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Memory Grants Pending] should have an outcome" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Memory Grants Outstanding] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Memory Grants Outstanding] should have an outcome" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Number of Deadlocks/sec] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Number of Deadlocks/sec] should have an outcome" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Readahead pages/sec] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Readahead pages/sec] should have an outcome" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Lock Waits/sec] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Lock Waits/sec] should have an outcome" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Lock Timeouts/sec] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Lock Timeouts/sec] should have an outcome" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Lock Requests/sec] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Lock Requests/sec] should have an outcome" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Average Wait Time (ms)] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Average Wait Time (ms)] should have an outcome" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page writes/sec] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Page writes/sec] should have an outcome" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page Lookups Rate] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Page Lookups Rate] should have an outcome" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page reads/sec] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Page reads/sec] should have an outcome" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Lazy writes/sec] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Lazy writes/sec] should have an outcome" time="0.036" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Free list stalls/sec] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Free list stalls/sec] should have an outcome" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page Split Rate] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Page Split Rate] should have an outcome" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [SQL Re-Compilations Rate] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [SQL Re-Compilations Rate] should have an outcome" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [SQL Compilations Rate] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [SQL Compilations Rate] should have an outcome" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Full Scan Rate] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Full Scan Rate] should have an outcome" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Long Running Open Transactions] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Long Running Open Transactions] should have an outcome" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases with no LOG backup] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Databases with no LOG backup] should have an outcome" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases with no DATA backup] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Databases with no DATA backup] should have an outcome" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Oldest DATA backup (days)] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Oldest DATA backup (days)] should have an outcome" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Oldest LOG backup (minutes)] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Oldest LOG backup (minutes)] should have an outcome" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Database page_verify not CHECKSUM] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Database page_verify not CHECKSUM] should have an outcome" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases not MULTI_USER] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Databases not MULTI_USER] should have an outcome" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases not ONLINE] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Databases not ONLINE] should have an outcome" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases with Auto Shrink Enabled] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Databases with Auto Shrink Enabled] should have an outcome" time="0.0539" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases with Auto Close Enabled] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Databases with Auto Close Enabled] should have an outcome" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Queued actions not processed] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Queued actions not processed] should have an outcome" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Failed Checks] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Failed Checks] should have an outcome" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Check execution time] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Check execution time] should have an outcome" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Days left until disk full] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Days left until disk full] should have an outcome" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Disk Free %] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Disk Free %] should have an outcome" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Action queue failed items] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Action queue failed items] should have an outcome" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Action queue pending items] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Action queue pending items] should have an outcome" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [SQL Server Uptime] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [SQL Server Uptime] should have an outcome" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [CPU Utilistaion] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [CPU Utilistaion] should have an outcome" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Blocked Process] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Blocked Process] should have an outcome" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Failed Agent Job] should have an outcome" name="Failed Checks.Checking if checks have outcome.Check [Failed Agent Job] should have an outcome" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Checking for checks that do not respect the execution frequency parameter " executed="True" result="Failure" success="False" time="4.6668" asserts="0" description="Checking for checks that do not respect the execution frequency parameter ">
                <results>
                  <test-suite type="ParameterizedTest" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [&lt;check_name&gt;] should respect execution frequency setting" executed="True" result="Failure" success="False" time="4.3376" asserts="0" description="Check [&lt;check_name&gt;] should respect execution frequency setting">
                    <results>
                      <test-case description="Check [dbachecks failed] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [dbachecks failed] should respect execution frequency setting" time="0.0977" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [SQLWATCH Errors] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [SQLWATCH Errors] should respect execution frequency setting" time="0.0847" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Central Repository Import Age] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Central Repository Import Age] should respect execution frequency setting" time="0.0893" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Central Repository Import Errors] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Central Repository Import Errors] should respect execution frequency setting" time="0.0829" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Snapshot age] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Snapshot age] should respect execution frequency setting" time="0.093" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Log Growths] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Log Growths] should respect execution frequency setting" time="0.0871" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Errors/sec] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Errors/sec] should respect execution frequency setting" time="0.0939" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Logins/sec] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Logins/sec] should respect execution frequency setting" time="0.0919" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page life expectancy] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Page life expectancy] should respect execution frequency setting" time="0.1011" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Buffer cache hit ratio] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Buffer cache hit ratio] should respect execution frequency setting" time="0.0836" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Memory Grants Pending] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Memory Grants Pending] should respect execution frequency setting" time="0.0842" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Memory Grants Outstanding] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Memory Grants Outstanding] should respect execution frequency setting" time="0.0839" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Number of Deadlocks/sec] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Number of Deadlocks/sec] should respect execution frequency setting" time="0.0832" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Readahead pages/sec] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Readahead pages/sec] should respect execution frequency setting" time="0.0816" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Lock Waits/sec] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Lock Waits/sec] should respect execution frequency setting" time="0.0967" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 1.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Lock Timeouts/sec] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Lock Timeouts/sec] should respect execution frequency setting" time="0.0881" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Lock Requests/sec] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Lock Requests/sec] should respect execution frequency setting" time="0.0977" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 1.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Average Wait Time (ms)] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Average Wait Time (ms)] should respect execution frequency setting" time="0.0932" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 1.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Page writes/sec] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Page writes/sec] should respect execution frequency setting" time="0.0852" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page Lookups Rate] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Page Lookups Rate] should respect execution frequency setting" time="0.0992" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 1.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Page reads/sec] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Page reads/sec] should respect execution frequency setting" time="0.0903" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Lazy writes/sec] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Lazy writes/sec] should respect execution frequency setting" time="0.0836" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Free list stalls/sec] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Free list stalls/sec] should respect execution frequency setting" time="0.098" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Page Split Rate] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Page Split Rate] should respect execution frequency setting" time="0.0881" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 1.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [SQL Re-Compilations Rate] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [SQL Re-Compilations Rate] should respect execution frequency setting" time="0.0907" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [SQL Compilations Rate] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [SQL Compilations Rate] should respect execution frequency setting" time="0.0869" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 1.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Full Scan Rate] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Full Scan Rate] should respect execution frequency setting" time="0.0935" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 1.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Long Running Open Transactions] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Long Running Open Transactions] should respect execution frequency setting" time="0.0843" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases with no LOG backup] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Databases with no LOG backup] should respect execution frequency setting" time="0.0844" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 1.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Databases with no DATA backup] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Databases with no DATA backup] should respect execution frequency setting" time="0.0908" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 14.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Oldest DATA backup (days)] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Oldest DATA backup (days)] should respect execution frequency setting" time="0.0975" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 1.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Oldest LOG backup (minutes)] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Oldest LOG backup (minutes)] should respect execution frequency setting" time="0.0953" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 5, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 4.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Database page_verify not CHECKSUM] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Database page_verify not CHECKSUM] should respect execution frequency setting" time="0.0903" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases not MULTI_USER] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Databases not MULTI_USER] should respect execution frequency setting" time="0.0891" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases not ONLINE] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Databases not ONLINE] should respect execution frequency setting" time="0.0812" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases with Auto Shrink Enabled] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Databases with Auto Shrink Enabled] should respect execution frequency setting" time="0.0805" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Databases with Auto Close Enabled] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Databases with Auto Close Enabled] should respect execution frequency setting" time="0.1013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Queued actions not processed] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Queued actions not processed] should respect execution frequency setting" time="0.0895" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 14.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Failed Checks] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Failed Checks] should respect execution frequency setting" time="0.0971" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 5, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 1.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Check execution time] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Check execution time] should respect execution frequency setting" time="0.091" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 15, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 14.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Days left until disk full] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Days left until disk full] should respect execution frequency setting" time="0.0836" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Disk Free %] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Disk Free %] should respect execution frequency setting" time="0.0897" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Action queue failed items] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Action queue failed items] should respect execution frequency setting" time="0.0852" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 5, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 4.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Action queue pending items] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Action queue pending items] should respect execution frequency setting" time="0.1026" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 5, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 4.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [SQL Server Uptime] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [SQL Server Uptime] should respect execution frequency setting" time="0.0969" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 10, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 9.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [CPU Utilistaion] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [CPU Utilistaion] should respect execution frequency setting" time="0.0843" asserts="0" success="False" result="Failure" executed="True">
                        <failure>
                          <message>Expected 5, because The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server, but got 4.</message>
                          <stack-trace>at &lt;ScriptBlock&gt;, C:\Users\marcin\Documents\GitHub\sqlwatch\sqlwatch\SqlWatch.Test\Pester.SqlWatch.Test.Checks.ps1: line 111
111:                 $result.min_check_frequency_minutes_calculated | Should -Be $check_frequency_minutes.check_frequency_minutes -Because 'The agent job that invokes the check engine runs every 1 minute but not all checks should run every 1 minute. There is a [check_frequency_minutes] column that tells us how often each check should run. This value must be respected otherwise all checks will run every 1 minute which will create additional load on the server'</stack-trace>
                        </failure>
                      </test-case>
                      <test-case description="Check [Blocked Process] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Blocked Process] should respect execution frequency setting" time="0.1008" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Check [Failed Agent Job] should respect execution frequency setting" name="Failed Checks.Checking for checks that do not respect the execution frequency parameter .Check [Failed Agent Job] should respect execution frequency setting" time="0.0926" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Test database design" executed="True" result="Failure" success="False" time="0.0569" asserts="0" description="Test database design">
            <results>
              <test-case description="The server must be in a time zone behind the UTC time zone in order to validate what time values are being written. This will allow us to assume that if the written value is in the future, the value is Not a UTC zone." name="Test database design.The server must be in a time zone behind the UTC time zone in order to validate what time values are being written. This will allow us to assume that if the written value is in the future, the value is Not a UTC zone." time="0" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>The test failed because the test was executed in Strict mode and the result 'Skipped' was translated to Failed.</message>
                  <stack-trace />
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>